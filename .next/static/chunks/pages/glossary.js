/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/glossary"],{

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fmac%2FDownloads%2Fucp%2Fpages%2Fglossary%2Findex.js&page=%2Fglossary!":
/*!************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fmac%2FDownloads%2Fucp%2Fpages%2Fglossary%2Findex.js&page=%2Fglossary! ***!
  \************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/glossary\",\n      function () {\n        return __webpack_require__(/*! ./pages/glossary/index.js */ \"./pages/glossary/index.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/glossary\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD0lMkZVc2VycyUyRm1hYyUyRkRvd25sb2FkcyUyRnVjcCUyRnBhZ2VzJTJGZ2xvc3NhcnklMkZpbmRleC5qcyZwYWdlPSUyRmdsb3NzYXJ5ISIsIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLDREQUEyQjtBQUNsRDtBQUNBO0FBQ0EsT0FBTyxJQUFVO0FBQ2pCLE1BQU0sVUFBVTtBQUNoQjtBQUNBLE9BQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/Zjg0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAod2luZG93Ll9fTkVYVF9QID0gd2luZG93Ll9fTkVYVF9QIHx8IFtdKS5wdXNoKFtcbiAgICAgIFwiL2dsb3NzYXJ5XCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwiLi9wYWdlcy9nbG9zc2FyeS9pbmRleC5qc1wiKTtcbiAgICAgIH1cbiAgICBdKTtcbiAgICBpZihtb2R1bGUuaG90KSB7XG4gICAgICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24gKCkge1xuICAgICAgICB3aW5kb3cuX19ORVhUX1AucHVzaChbXCIvZ2xvc3NhcnlcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fmac%2FDownloads%2Fucp%2Fpages%2Fglossary%2Findex.js&page=%2Fglossary!\n"));

/***/ }),

/***/ "./pages/glossary/index.js":
/*!*********************************!*\
  !*** ./pages/glossary/index.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n\nvar _s = $RefreshSig$();\n\n\nconst GlossaryTable = ()=>{\n    _s();\n    const termsData = [\n        {\n            keyword: \"Abstract Data Type (ADT)\",\n            description: \"A mathematical model for data types that defines behavior without implementation details (e.g., Stack, Queue).\"\n        },\n        {\n            keyword: \"Access Control\",\n            description: \"Security policies restricting unauthorized access to systems/resources (e.g., RBAC, ACL).\"\n        },\n        {\n            keyword: \"Accumulator\",\n            description: \"CPU register storing intermediate arithmetic/logic results.\"\n        },\n        {\n            keyword: \"Adder\",\n            description: \"Digital circuit performing binary addition (Half-Adder, Full-Adder).\"\n        },\n        {\n            keyword: \"Address Bus\",\n            description: \"Hardware pathway carrying memory addresses between CPU and RAM.\"\n        },\n        {\n            keyword: \"Adversarial AI\",\n            description: \"Attacks manipulating ML models (e.g., adversarial examples).\"\n        },\n        {\n            keyword: \"Agile Development\",\n            description: \"Iterative software methodology (Scrum, Kanban).\"\n        },\n        {\n            keyword: \"AJAX\",\n            description: \"Asynchronous JavaScript/XML for dynamic web content.\"\n        },\n        {\n            keyword: \"Algorithm\",\n            description: \"Step-by-step problem-solving procedure (e.g., Dijkstra’s, Quicksort).\"\n        },\n        {\n            keyword: \"Alpha Testing\",\n            description: \"Initial software testing by internal teams.\"\n        },\n        {\n            keyword: \"ALU (Arithmetic Logic Unit)\",\n            description: \"CPU component performing calculations/bitwise operations.\"\n        },\n        {\n            keyword: \"Amazon Web Services (AWS)\",\n            description: \"Cloud computing platform (EC2, S3, Lambda).\"\n        },\n        {\n            keyword: \"Analog Computer\",\n            description: \"Processes continuous data (e.g., voltage, temperature).\"\n        },\n        {\n            keyword: \"Android SDK\",\n            description: \"Toolkit for building Android apps.\"\n        },\n        {\n            keyword: \"Animation\",\n            description: \"Rapid image sequencing to simulate motion.\"\n        },\n        {\n            keyword: \"ANSI\",\n            description: \"American National Standards Institute (e.g., ANSI C).\"\n        },\n        {\n            keyword: \"API\",\n            description: \"Application Programming Interface for software interaction.\"\n        },\n        {\n            keyword: \"Applet\",\n            description: \"Small Java application running in browsers (deprecated).\"\n        },\n        {\n            keyword: \"Archiving\",\n            description: \"Long-term data storage/compression (e.g., ZIP, TAR).\"\n        },\n        {\n            keyword: \"ARP\",\n            description: \"Address Resolution Protocol (maps IP to MAC).\"\n        },\n        {\n            keyword: \"Array\",\n            description: \"Fixed-size collection of same-type elements.\"\n        },\n        {\n            keyword: \"Artificial Intelligence (AI)\",\n            description: \"Machines mimicking human intelligence (ML, NLP, Robotics).\"\n        },\n        {\n            keyword: \"Assembler\",\n            description: \"Converts assembly language to machine code.\"\n        },\n        {\n            keyword: \"Assembly Language\",\n            description: \"Low-level programming using mnemonics (e.g., MOV, ADD).\"\n        },\n        {\n            keyword: \"Asymmetric Encryption\",\n            description: \"Public-key cryptography (e.g., RSA, ECC).\"\n        },\n        {\n            keyword: \"Atomicity\",\n            description: \"Database property ensuring transactions are all-or-nothing (ACID).\"\n        },\n        {\n            keyword: \"Attribute\",\n            description: \"Data field in OOP or databases (e.g., class properties).\"\n        },\n        {\n            keyword: \"Authentication\",\n            description: \"Verifying user identity (e.g., passwords, OTP).\"\n        },\n        {\n            keyword: \"Authorization\",\n            description: \"Granting resource access post-authentication.\"\n        },\n        {\n            keyword: \"Autocomplete\",\n            description: \"UI feature predicting user input (e.g., search suggestions).\"\n        },\n        {\n            keyword: \"Automata Theory\",\n            description: \"Study of abstract machines (DFA, NFA, Turing Machines).\"\n        },\n        {\n            keyword: \"AVL Tree\",\n            description: \"Self-balancing binary search tree.\"\n        },\n        {\n            keyword: \"A* Algorithm\",\n            description: \"Pathfinding algorithm using heuristics.\"\n        },\n        {\n            keyword: \"Abstraction\",\n            description: \"Hiding complexity while exposing essentials (OOP principle).\"\n        },\n        {\n            keyword: \"Active Directory\",\n            description: \"Microsoft’s directory service for network management.\"\n        },\n        {\n            keyword: \"Actor Model\",\n            description: \"Concurrency framework (e.g., Akka, Erlang).\"\n        },\n        {\n            keyword: \"Adaptive Software\",\n            description: \"Programs adjusting behavior based on environment.\"\n        },\n        {\n            keyword: \"Adjacency Matrix\",\n            description: \"Graph representation using a 2D array.\"\n        },\n        {\n            keyword: \"Affine Transformation\",\n            description: \"Linear mapping in graphics (rotation, scaling).\"\n        },\n        {\n            keyword: \"Agent-Based Modeling\",\n            description: \"Simulating autonomous agents (e.g., traffic systems).\"\n        },\n        {\n            keyword: \"Ambient Intelligence\",\n            description: \"Smart environments reacting to human presence.\"\n        },\n        {\n            keyword: \"Apache Hadoop\",\n            description: \"Framework for distributed big data processing.\"\n        },\n        {\n            keyword: \"Augmented Reality (AR)\",\n            description: \"Overlaying digital content on real-world views.\"\n        },\n        {\n            keyword: \"Backend\",\n            description: \"The server-side part of an application that handles logic, databases, and APIs.\"\n        },\n        {\n            keyword: \"Backpropagation\",\n            description: \"An algorithm used in training neural networks to calculate gradients for weight updates.\"\n        },\n        {\n            keyword: \"Backup\",\n            description: \"The process of copying data to restore it in case of loss or corruption.\"\n        },\n        {\n            keyword: \"Bandwidth\",\n            description: \"The maximum data transfer rate of a network or internet connection, measured in bits per second (bps).\"\n        },\n        {\n            keyword: \"Base Case\",\n            description: \"The terminating condition in a recursive function that stops further recursion.\"\n        },\n        {\n            keyword: \"Batch Processing\",\n            description: \"Executing a series of jobs (data/commands) without manual intervention, often scheduled.\"\n        },\n        {\n            keyword: \"Behavioral Model\",\n            description: \"A design pattern focusing on communication between objects (e.g., Observer, Strategy).\"\n        },\n        {\n            keyword: \"Big O Notation\",\n            description: \"A mathematical notation describing the upper bound of an algorithm's time/space complexity.\"\n        },\n        {\n            keyword: \"Binary Search\",\n            description: \"An efficient O(log n) search algorithm for sorted arrays by repeatedly dividing the interval.\"\n        },\n        {\n            keyword: \"Binary Tree\",\n            description: \"A tree data structure where each node has at most two children (left and right).\"\n        },\n        {\n            keyword: \"Bit\",\n            description: \"The smallest unit of data in computing, representing a binary value (0 or 1).\"\n        },\n        {\n            keyword: \"Blockchain\",\n            description: \"A decentralized, distributed ledger technology for secure transactions (e.g., Bitcoin, Ethereum).\"\n        },\n        {\n            keyword: \"Boolean\",\n            description: \"A data type with two values: true or false.\"\n        },\n        {\n            keyword: \"Bootstrap\",\n            description: \"A front-end framework for responsive web design using HTML/CSS/JS.\"\n        },\n        {\n            keyword: \"Botnet\",\n            description: \"A network of compromised devices controlled by malware for DDoS attacks or spam.\"\n        },\n        {\n            keyword: \"Branch\",\n            description: \"A divergence in code execution (e.g., in version control or CPU pipelines).\"\n        },\n        {\n            keyword: \"Breadth-First Search (BFS)\",\n            description: \"A graph traversal algorithm exploring all neighbor nodes at the present depth before moving deeper.\"\n        },\n        {\n            keyword: \"Buffer\",\n            description: \"A temporary memory area storing data during transfer between processes/devices.\"\n        },\n        {\n            keyword: \"Bug\",\n            description: \"An error or flaw in software causing unexpected behavior.\"\n        },\n        {\n            keyword: \"Bus\",\n            description: \"A communication system transferring data between computer components (e.g., USB, PCI).\"\n        },\n        {\n            keyword: \"Byte\",\n            description: \"A unit of data equal to 8 bits, representing a single character (e.g., 'A' = 65 in ASCII).\"\n        },\n        {\n            keyword: \"Bytecode\",\n            description: \"Intermediate code executed by virtual machines (e.g., Java JVM, Python PVM).\"\n        },\n        {\n            keyword: \"Cache\",\n            description: \"A high-speed data storage layer that stores a subset of data for faster access.\"\n        },\n        {\n            keyword: \"Call Stack\",\n            description: \"A stack data structure that stores information about active subroutines in a program.\"\n        },\n        {\n            keyword: \"Compiler\",\n            description: \"A program that translates source code written in a high-level language into machine code.\"\n        },\n        {\n            keyword: \"Cryptography\",\n            description: \"The practice of secure communication techniques to protect information from adversaries.\"\n        },\n        {\n            keyword: \"CSS (Cascading Style Sheets)\",\n            description: \"A stylesheet language used to describe the presentation of a document written in HTML.\"\n        },\n        {\n            keyword: \"CPU (Central Processing Unit)\",\n            description: \"The electronic circuitry that executes instructions comprising a computer program.\"\n        },\n        {\n            keyword: \"Cloud Computing\",\n            description: \"The delivery of computing services over the internet ('the cloud') including servers, storage, databases, etc.\"\n        },\n        {\n            keyword: \"Cybersecurity\",\n            description: \"The practice of protecting systems, networks, and programs from digital attacks.\"\n        },\n        {\n            keyword: \"Concurrency\",\n            description: \"The ability of different parts or units of a program to be executed out-of-order or in partial order.\"\n        },\n        {\n            keyword: \"Cookie\",\n            description: \"A small piece of data sent from a website and stored on the user's computer by the web browser.\"\n        },\n        {\n            keyword: \"CAP Theorem\",\n            description: \"A concept that a distributed system can only provide 2 of 3 guarantees: Consistency, Availability, and Partition tolerance.\"\n        },\n        {\n            keyword: \"CI/CD (Continuous Integration/Continuous Deployment)\",\n            description: \"A method to frequently deliver apps by introducing automation into the stages of app development.\"\n        },\n        {\n            keyword: \"C++\",\n            description: \"A general-purpose programming language created as an extension of the C programming language.\"\n        },\n        {\n            keyword: \"C#\",\n            description: \"A general-purpose, multi-paradigm programming language encompassing strong typing and object-oriented programming.\"\n        },\n        {\n            keyword: \"Command Line Interface (CLI)\",\n            description: \"A text-based interface used to interact with software and operating systems.\"\n        },\n        {\n            keyword: \"Client-Server Model\",\n            description: \"A distributed application structure that partitions tasks between providers (servers) and requesters (clients).\"\n        },\n        {\n            keyword: \"Computer Vision\",\n            description: \"A field of artificial intelligence that trains computers to interpret and understand the visual world.\"\n        },\n        {\n            keyword: \"Chatbot\",\n            description: \"A software application used to conduct an online chat conversation via text or text-to-speech.\"\n        },\n        {\n            keyword: \"Clustering\",\n            description: \"A machine learning technique that groups similar data points together.\"\n        },\n        {\n            keyword: \"Checksum\",\n            description: \"A small-sized datum derived from a block of digital data for detecting errors.\"\n        },\n        {\n            keyword: \"Cross-Platform\",\n            description: \"Software that can run on multiple computing platforms with minimal modifications.\"\n        },\n        {\n            keyword: \"Cron Job\",\n            description: \"A time-based job scheduler in Unix-like operating systems.\"\n        },\n        {\n            keyword: \"Content Delivery Network (CDN)\",\n            description: \"A geographically distributed network of proxy servers and their data centers.\"\n        },\n        {\n            keyword: \"Cyclomatic Complexity\",\n            description: \"A software metric used to indicate the complexity of a program.\"\n        },\n        {\n            keyword: \"Caching\",\n            description: \"The process of storing copies of files in a cache for quicker access.\"\n        },\n        {\n            keyword: \"Containerization\",\n            description: \"A lightweight alternative to full machine virtualization that involves encapsulating an application in a container.\"\n        },\n        {\n            keyword: \"Code Review\",\n            description: \"A systematic examination of computer source code intended to find and fix mistakes overlooked in development.\"\n        },\n        {\n            keyword: \"Cache Coherence\",\n            description: \"The uniformity of shared resource data that ends up stored in multiple local caches.\"\n        },\n        {\n            keyword: \"Closure\",\n            description: \"A function that has access to its own scope, the outer function's variables, and global variables.\"\n        },\n        {\n            keyword: \"CORS (Cross-Origin Resource Sharing)\",\n            description: \"A mechanism that allows restricted resources on a web page to be requested from another domain.\"\n        },\n        {\n            keyword: \"Cipher\",\n            description: \"An algorithm for performing encryption or decryption.\"\n        },\n        {\n            keyword: \"CRUD (Create, Read, Update, Delete)\",\n            description: \"The four basic functions of persistent storage in database applications.\"\n        },\n        {\n            keyword: \"Context Switch\",\n            description: \"The process of storing the state of a process or thread so that it can be restored and execution resumed later.\"\n        },\n        {\n            keyword: \"Continuous Integration\",\n            description: \"The practice of merging all developers' working copies to a shared mainline several times a day.\"\n        },\n        {\n            keyword: \"Cyberattack\",\n            description: \"An attempt to damage, disrupt, or gain unauthorized access to a computer system or network.\"\n        },\n        {\n            keyword: \"Caching\",\n            description: \"The process of storing copies of files in a cache for quicker access.\"\n        },\n        {\n            keyword: \"Clustering\",\n            description: \"A machine learning technique that groups similar data points together.\"\n        },\n        {\n            keyword: \"Cybernetics\",\n            description: \"The science of communications and automatic control systems in both machines and living things.\"\n        },\n        {\n            keyword: \"Code Refactoring\",\n            description: \"The process of restructuring existing computer code without changing its external behavior.\"\n        },\n        {\n            keyword: \"Convolutional Neural Network (CNN)\",\n            description: \"A class of deep neural networks, most commonly applied to analyzing visual imagery.\"\n        },\n        {\n            keyword: \"Cryptocurrency\",\n            description: \"A digital currency in which transactions are verified and records maintained by a decentralized system.\"\n        },\n        {\n            keyword: \"Cyber-Physical Systems\",\n            description: \"Systems that integrate computation, networking, and physical processes.\"\n        },\n        {\n            keyword: \"Content Management System (CMS)\",\n            description: \"A software application used to create and manage digital content.\"\n        },\n        {\n            keyword: \"Computational Complexity\",\n            description: \"A branch of computer science that focuses on classifying computational problems according to their difficulty.\"\n        },\n        {\n            keyword: \"Computer Architecture\",\n            description: \"The set of rules and methods that describe the functionality, organization, and implementation of computer systems.\"\n        },\n        {\n            keyword: \"Cyberspace\",\n            description: \"The notional environment in which communication over computer networks occurs.\"\n        },\n        {\n            keyword: \"Coding Standards\",\n            description: \"A set of guidelines for a specific programming language that recommend programming style, practices, and methods.\"\n        },\n        {\n            keyword: \"Cellular Automaton\",\n            description: \"A discrete model studied in computability theory, mathematics, physics, complexity science, theoretical biology.\"\n        },\n        {\n            keyword: \"Cyber Warfare\",\n            description: \"The use of digital attacks to attack a nation, causing comparable harm to actual warfare.\"\n        },\n        {\n            keyword: \"Code Obfuscation\",\n            description: \"The deliberate act of creating source or machine code that is difficult for humans to understand.\"\n        },\n        {\n            keyword: \"Cascading Failure\",\n            description: \"A failure in a system of interconnected parts where the failure of one part can trigger the failure of successive parts.\"\n        },\n        {\n            keyword: \"Computational Thinking\",\n            description: \"A problem-solving process that includes formulating problems, logically organizing data, and representing data through abstractions.\"\n        },\n        {\n            keyword: \"Cloud Storage\",\n            description: \"A model of computer data storage in which the digital data is stored in logical pools across multiple servers.\"\n        },\n        {\n            keyword: \"Cyber Hygiene\",\n            description: \"Basic steps and practices that users can take to improve their cybersecurity.\"\n        },\n        {\n            keyword: \"Computer Network\",\n            description: \"A set of computers connected together for the purpose of sharing resources.\"\n        },\n        {\n            keyword: \"Circuit Switching\",\n            description: \"A method of implementing a telecommunications network in which two network nodes establish a dedicated communications channel.\"\n        },\n        {\n            keyword: \"Coding Theory\",\n            description: \"The study of the properties of codes and their fitness for a specific application.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence\",\n            description: \"Information about threats and threat actors that helps mitigate harmful events in cyberspace.\"\n        },\n        {\n            keyword: \"Cluster Analysis\",\n            description: \"The task of grouping a set of objects in such a way that objects in the same group are more similar to each other.\"\n        },\n        {\n            keyword: \"Computational Biology\",\n            description: \"The science of using biological data to develop algorithms and models to understand biological systems.\"\n        },\n        {\n            keyword: \"Cyber Resilience\",\n            description: \"The ability of a system to anticipate, withstand, recover from, and adapt to adverse conditions, stresses, or attacks.\"\n        },\n        {\n            keyword: \"Context-Free Grammar\",\n            description: \"A formal grammar where production rules are of the form A → α, where A is a nonterminal and α is a string of terminals and/or nonterminals.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security\",\n            description: \"The protection of cyber-physical systems from malicious attacks.\"\n        },\n        {\n            keyword: \"Concurrent Computing\",\n            description: \"A form of computing in which several computations are executed during overlapping time periods.\"\n        },\n        {\n            keyword: \"Code Smell\",\n            description: \"Any characteristic in the source code of a program that possibly indicates a deeper problem.\"\n        },\n        {\n            keyword: \"Cyber Insurance\",\n            description: \"An insurance product used to protect businesses from Internet-based risks.\"\n        },\n        {\n            keyword: \"Computer Vision Syndrome\",\n            description: \"A condition resulting from focusing the eyes on a computer display for extended periods.\"\n        },\n        {\n            keyword: \"Cyber Law\",\n            description: \"The legal issues related to use of communications technology, particularly cyberspace.\"\n        },\n        {\n            keyword: \"Cloud Security\",\n            description: \"The set of policies, technologies, and controls deployed to protect data and infrastructure in cloud computing.\"\n        },\n        {\n            keyword: \"Computational Geometry\",\n            description: \"A branch of computer science devoted to the study of algorithms which can be stated in terms of geometry.\"\n        },\n        {\n            keyword: \"Cyber Espionage\",\n            description: \"The use of computer networks to gain illicit access to confidential information.\"\n        },\n        {\n            keyword: \"Contextual Bandit\",\n            description: \"A machine learning algorithm that selects actions based on contextual information.\"\n        },\n        {\n            keyword: \"Cyber Forensics\",\n            description: \"The practice of identifying, acquiring, processing, analyzing, and reporting on data stored electronically.\"\n        },\n        {\n            keyword: \"Computational Linguistics\",\n            description: \"The scientific study of language from a computational perspective.\"\n        },\n        {\n            keyword: \"Cyber Range\",\n            description: \"A virtual environment used for cybersecurity training and simulations.\"\n        },\n        {\n            keyword: \"Cognitive Computing\",\n            description: \"Systems that learn at scale, reason with purpose, and interact with humans naturally.\"\n        },\n        {\n            keyword: \"Cyber Risk Management\",\n            description: \"The process of identifying, assessing, and prioritizing risks to information and information systems.\"\n        },\n        {\n            keyword: \"Computational Neuroscience\",\n            description: \"The study of brain function in terms of the information processing properties of the structures that make up the nervous system.\"\n        },\n        {\n            keyword: \"Cyber Threat Hunting\",\n            description: \"The practice of proactively searching for cyber threats that are lurking undetected in a network.\"\n        },\n        {\n            keyword: \"Context-Aware Computing\",\n            description: \"A computing paradigm that uses context to provide relevant information and services to the user.\"\n        },\n        {\n            keyword: \"Cyber-Physical Attack\",\n            description: \"A security breach in cyberspace that impacts operations in the physical world.\"\n        },\n        {\n            keyword: \"Computational Physics\",\n            description: \"The study and implementation of numerical analysis to solve problems in physics.\"\n        },\n        {\n            keyword: \"Cyber Threat Modeling\",\n            description: \"A process by which potential threats can be identified, enumerated, and prioritized.\"\n        },\n        {\n            keyword: \"Contextual Advertising\",\n            description: \"A form of targeted advertising for advertisements appearing on websites or other media.\"\n        },\n        {\n            keyword: \"Cyber-Physical Interface\",\n            description: \"The boundary between the cyber and physical worlds where interactions occur.\"\n        },\n        {\n            keyword: \"Computational Social Science\",\n            description: \"The academic sub-discipline concerned with computational approaches to the social sciences.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Sharing\",\n            description: \"The exchange of information about cyber threats between organizations.\"\n        },\n        {\n            keyword: \"Contextual Inquiry\",\n            description: \"A user-centered design research method that involves observing and interviewing users in their natural environment.\"\n        },\n        {\n            keyword: \"Cyber-Physical Simulation\",\n            description: \"The simulation of systems that integrate computation, networking, and physical processes.\"\n        },\n        {\n            keyword: \"Computational Sustainability\",\n            description: \"The application of computational techniques to sustainable development.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Platform\",\n            description: \"A technology solution that aggregates, correlates, and analyzes threat intelligence data.\"\n        },\n        {\n            keyword: \"Contextual Design\",\n            description: \"A user-centered design process that uses contextual inquiry as its primary research method.\"\n        },\n        {\n            keyword: \"Cyber-Physical Testbed\",\n            description: \"A platform for experimenting with cyber-physical systems.\"\n        },\n        {\n            keyword: \"Computational Topology\",\n            description: \"The study of topological features of data from a computational perspective.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Feed\",\n            description: \"A stream of data containing information about cyber threats.\"\n        },\n        {\n            keyword: \"Contextual Bandit Problem\",\n            description: \"A machine learning problem where an algorithm must select actions based on contextual information.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security Exercise\",\n            description: \"A training exercise focused on securing cyber-physical systems.\"\n        },\n        {\n            keyword: \"Computational Typology\",\n            description: \"The computational study of language typology.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Analyst\",\n            description: \"A professional who analyzes cyber threat intelligence data.\"\n        },\n        {\n            keyword: \"Contextual Bandit Algorithm\",\n            description: \"A machine learning algorithm that solves the contextual bandit problem.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security Assessment\",\n            description: \"An evaluation of the security of a cyber-physical system.\"\n        },\n        {\n            keyword: \"Computational Verification\",\n            description: \"The use of computers to verify mathematical proofs.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Framework\",\n            description: \"A structured approach to collecting, analyzing, and disseminating cyber threat intelligence.\"\n        },\n        {\n            keyword: \"Contextual Bandit Model\",\n            description: \"A machine learning model that implements a contextual bandit algorithm.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security Framework\",\n            description: \"A structured approach to securing cyber-physical systems.\"\n        },\n        {\n            keyword: \"Computational Virology\",\n            description: \"The use of computers to study viruses.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Lifecycle\",\n            description: \"The process by which cyber threat intelligence is collected, analyzed, and acted upon.\"\n        },\n        {\n            keyword: \"Contextual Bandit Problem\",\n            description: \"A machine learning problem where an algorithm must select actions based on contextual information.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security Policy\",\n            description: \"A set of rules and procedures for securing cyber-physical systems.\"\n        },\n        {\n            keyword: \"Computational Vision\",\n            description: \"The use of computers to process and understand visual information.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Platform\",\n            description: \"A technology solution that aggregates, correlates, and analyzes threat intelligence data.\"\n        },\n        {\n            keyword: \"Contextual Bandit Solution\",\n            description: \"A method for solving the contextual bandit problem.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security Standard\",\n            description: \"A set of criteria for securing cyber-physical systems.\"\n        },\n        {\n            keyword: \"Computational Zoology\",\n            description: \"The use of computers to study animals.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Process\",\n            description: \"The steps involved in collecting, analyzing, and acting on cyber threat intelligence.\"\n        },\n        {\n            keyword: \"Contextual Bandit System\",\n            description: \"A machine learning system that implements a contextual bandit algorithm.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security Training\",\n            description: \"Education and exercises focused on securing cyber-physical systems.\"\n        },\n        {\n            keyword: \"Computational Zoology\",\n            description: \"The use of computers to study animals.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Sharing\",\n            description: \"The exchange of information about cyber threats between organizations.\"\n        },\n        {\n            keyword: \"Contextual Bandit Technique\",\n            description: \"A method for implementing a contextual bandit algorithm.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security Tool\",\n            description: \"Software or hardware used to secure cyber-physical systems.\"\n        },\n        {\n            keyword: \"Computational Zoology\",\n            description: \"The use of computers to study animals.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Sharing Platform\",\n            description: \"A technology solution that facilitates the exchange of cyber threat intelligence.\"\n        },\n        {\n            keyword: \"Contextual Bandit Theory\",\n            description: \"The mathematical foundation of contextual bandit algorithms.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security Vulnerability\",\n            description: \"A weakness in a cyber-physical system that could be exploited by a threat actor.\"\n        },\n        {\n            keyword: \"Computational Zoology\",\n            description: \"The use of computers to study animals.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Sharing Protocol\",\n            description: \"A standardized method for exchanging cyber threat intelligence.\"\n        },\n        {\n            keyword: \"Contextual Bandit Variant\",\n            description: \"A modified version of the contextual bandit problem.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security Workshop\",\n            description: \"A meeting or training session focused on securing cyber-physical systems.\"\n        },\n        {\n            keyword: \"Computational Zoology\",\n            description: \"The use of computers to study animals.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Sharing Standard\",\n            description: \"A set of criteria for exchanging cyber threat intelligence.\"\n        },\n        {\n            keyword: \"Contextual Bandit Application\",\n            description: \"A practical use of contextual bandit algorithms.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security Exercise\",\n            description: \"A training exercise focused on securing cyber-physical systems.\"\n        },\n        {\n            keyword: \"Computational Zoology\",\n            description: \"The use of computers to study animals.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Sharing Framework\",\n            description: \"A structured approach to exchanging cyber threat intelligence.\"\n        },\n        {\n            keyword: \"Contextual Bandit Implementation\",\n            description: \"A specific way of coding a contextual bandit algorithm.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security Assessment\",\n            description: \"An evaluation of the security of a cyber-physical system.\"\n        },\n        {\n            keyword: \"Computational Zoology\",\n            description: \"The use of computers to study animals.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Sharing Process\",\n            description: \"The steps involved in exchanging cyber threat intelligence.\"\n        },\n        {\n            keyword: \"Contextual Bandit Performance\",\n            description: \"The effectiveness of a contextual bandit algorithm.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security Policy\",\n            description: \"A set of rules and procedures for securing cyber-physical systems.\"\n        },\n        {\n            keyword: \"Computational Zoology\",\n            description: \"The use of computers to study animals.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Sharing Standard\",\n            description: \"A set of criteria for exchanging cyber threat intelligence.\"\n        },\n        {\n            keyword: \"Contextual Bandit Optimization\",\n            description: \"The process of improving the performance of a contextual bandit algorithm.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security Standard\",\n            description: \"A set of criteria for securing cyber-physical systems.\"\n        },\n        {\n            keyword: \"Computational Zoology\",\n            description: \"The use of computers to study animals.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Sharing Framework\",\n            description: \"A structured approach to exchanging cyber threat intelligence.\"\n        },\n        {\n            keyword: \"Contextual Bandit Evaluation\",\n            description: \"The process of assessing the performance of a contextual bandit algorithm.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security Framework\",\n            description: \"A structured approach to securing cyber-physical systems.\"\n        },\n        {\n            keyword: \"Computational Zoology\",\n            description: \"The use of computers to study animals.\"\n        },\n        {\n            keyword: \"Cyber Threat Intelligence Sharing Protocol\",\n            description: \"A standardized method for exchanging cyber threat intelligence.\"\n        },\n        {\n            keyword: \"Contextual Bandit Analysis\",\n            description: \"The examination of a contextual bandit algorithm's behavior.\"\n        },\n        {\n            keyword: \"Cyber-Physical Security Tool\",\n            description: \"Software or hardware used to secure cyber-physical systems.\"\n        },\n        {\n            \"keyword\": \"Database\",\n            \"description\": \"An organized collection of structured data stored electronically in a computer system.\"\n        },\n        {\n            \"keyword\": \"Data Structure\",\n            \"description\": \"A specialized format for organizing, processing, retrieving and storing data (e.g., arrays, linked lists).\"\n        },\n        {\n            \"keyword\": \"Debugging\",\n            \"description\": \"The process of identifying and removing errors from computer hardware or software.\"\n        },\n        {\n            \"keyword\": \"Deep Learning\",\n            \"description\": \"A subset of machine learning using artificial neural networks with multiple abstraction layers.\"\n        },\n        {\n            \"keyword\": \"DNS (Domain Name System)\",\n            \"description\": \"The hierarchical naming system that translates domain names to IP addresses.\"\n        },\n        {\n            \"keyword\": \"Distributed System\",\n            \"description\": \"A system whose components are located on networked computers that communicate to achieve a common goal.\"\n        },\n        {\n            \"keyword\": \"Docker\",\n            \"description\": \"A platform for developing, shipping, and running applications in containers.\"\n        },\n        {\n            \"keyword\": \"Data Mining\",\n            \"description\": \"The process of discovering patterns in large datasets using machine learning, statistics, and database systems.\"\n        },\n        {\n            \"keyword\": \"Dijkstra's Algorithm\",\n            \"description\": \"An algorithm for finding the shortest paths between nodes in a graph.\"\n        },\n        {\n            \"keyword\": \"Dynamic Programming\",\n            \"description\": \"A method for solving complex problems by breaking them down into simpler subproblems.\"\n        },\n        {\n            \"keyword\": \"Data Warehouse\",\n            \"description\": \"A central repository of integrated data from one or more disparate sources.\"\n        },\n        {\n            \"keyword\": \"DevOps\",\n            \"description\": \"A set of practices combining software development (Dev) and IT operations (Ops).\"\n        },\n        {\n            \"keyword\": \"Digital Signature\",\n            \"description\": \"A mathematical scheme for verifying the authenticity of digital messages or documents.\"\n        },\n        {\n            \"keyword\": \"DDoS (Distributed Denial of Service)\",\n            \"description\": \"A cyberattack where multiple systems flood a target's resources to disrupt service.\"\n        },\n        {\n            \"keyword\": \"Dart\",\n            \"description\": \"A client-optimized programming language developed by Google for building mobile, desktop and web apps.\"\n        },\n        {\n            \"keyword\": \"Data Science\",\n            \"description\": \"An interdisciplinary field using scientific methods to extract knowledge from structured/unstructured data.\"\n        },\n        {\n            \"keyword\": \"Dependency Injection\",\n            \"description\": \"A design pattern where an object receives other objects it depends on (inversion of control).\"\n        },\n        {\n            \"keyword\": \"Django\",\n            \"description\": \"A high-level Python web framework encouraging rapid development and clean design.\"\n        },\n        {\n            \"keyword\": \"Docker Compose\",\n            \"description\": \"A tool for defining and running multi-container Docker applications.\"\n        },\n        {\n            \"keyword\": \"Data Lake\",\n            \"description\": \"A storage repository holding vast amounts of raw data in native format.\"\n        },\n        {\n            \"keyword\": \"Dual Stack\",\n            \"description\": \"A networking architecture allowing hosts to simultaneously communicate via IPv4 and IPv6.\"\n        },\n        {\n            \"keyword\": \"Deadlock\",\n            \"description\": \"A situation where processes block each other by holding resources needed by another.\"\n        },\n        {\n            \"keyword\": \"DynamoDB\",\n            \"description\": \"Amazon's fully managed NoSQL database service.\"\n        },\n        {\n            \"keyword\": \"Data Modeling\",\n            \"description\": \"The process of creating a data model for an information system.\"\n        },\n        {\n            \"keyword\": \"Design Pattern\",\n            \"description\": \"A general reusable solution to commonly occurring problems in software design.\"\n        },\n        {\n            \"keyword\": \"Dart VM\",\n            \"description\": \"The virtual machine that executes Dart code and provides runtime support.\"\n        },\n        {\n            \"keyword\": \"Data Pipeline\",\n            \"description\": \"A set of data processing elements connected in series for automated data flow.\"\n        },\n        {\n            \"keyword\": \"Differential Privacy\",\n            \"description\": \"A system for publicly sharing data while withholding information about individuals.\"\n        },\n        {\n            \"keyword\": \"Directive (Programming)\",\n            \"description\": \"A language construct specifying how a compiler should process input (e.g., #include in C).\"\n        },\n        {\n            \"keyword\": \"Domain-Driven Design (DDD)\",\n            \"description\": \"An approach to software development focusing on complex needs by connecting implementation to an evolving model.\"\n        },\n        {\n            \"keyword\": \"Data Governance\",\n            \"description\": \"The overall management of availability, usability, integrity, and security of enterprise data.\"\n        },\n        {\n            \"keyword\": \"Dependency Graph\",\n            \"description\": \"A directed graph representing dependencies of several objects toward each other.\"\n        },\n        {\n            \"keyword\": \"Deterministic Algorithm\",\n            \"description\": \"An algorithm that, given a particular input, will always produce the same output.\"\n        },\n        {\n            \"keyword\": \"Durable (ACID)\",\n            \"description\": \"A database property where committed transactions persist even after system failures.\"\n        },\n        {\n            \"keyword\": \"Data Integrity\",\n            \"description\": \"The maintenance and assurance of data accuracy and consistency over its lifecycle.\"\n        },\n        {\n            \"keyword\": \"Datalog\",\n            \"description\": \"A declarative logic programming language for querying databases.\"\n        },\n        {\n            \"keyword\": \"Declarative Programming\",\n            \"description\": \"A paradigm expressing the logic of computation without describing control flow (e.g., SQL).\"\n        },\n        {\n            \"keyword\": \"Docker Swarm\",\n            \"description\": \"Docker's native clustering and orchestration tool.\"\n        },\n        {\n            \"keyword\": \"Dataframe\",\n            \"description\": \"A 2D labeled data structure with columns of potentially different types (Pandas, R).\"\n        },\n        {\n            \"keyword\": \"Dynamic Typing\",\n            \"description\": \"A language feature where type checking is performed at runtime (e.g., Python, JavaScript).\"\n        },\n        {\n            \"keyword\": \"Denormalization\",\n            \"description\": \"A database optimization technique adding redundant data to improve read performance.\"\n        },\n        {\n            \"keyword\": \"Dual Core\",\n            \"description\": \"A CPU with two complete execution cores per physical processor.\"\n        },\n        {\n            \"keyword\": \"Data Dictionary\",\n            \"description\": \"A centralized repository of information about data such as meaning, relationships, origin, usage.\"\n        },\n        {\n            \"keyword\": \"Dimensional Modeling\",\n            \"description\": \"A data structure technique optimized for data warehousing tools.\"\n        },\n        {\n            \"keyword\": \"Duck Typing\",\n            \"description\": \"A style of dynamic typing where an object's suitability is determined by presence of methods/properties.\"\n        },\n        {\n            \"keyword\": \"Dockerfile\",\n            \"description\": \"A text document containing commands to assemble a Docker image.\"\n        },\n        {\n            \"keyword\": \"Data Cleansing\",\n            \"description\": \"The process of detecting and correcting corrupt or inaccurate records from datasets.\"\n        },\n        {\n            \"keyword\": \"Depth-First Search (DFS)\",\n            \"description\": \"A graph traversal algorithm exploring as far as possible along each branch before backtracking.\"\n        },\n        {\n            \"keyword\": \"Deployment\",\n            \"description\": \"The activities making a software system available for use.\"\n        },\n        {\n            \"keyword\": \"Data Serialization\",\n            \"description\": \"The process of converting data structures into a storable/transmittable format (e.g., JSON, Protocol Buffers).\"\n        },\n        {\n            \"keyword\": \"DMA (Direct Memory Access)\",\n            \"description\": \"A feature allowing hardware subsystems to access memory independently of the CPU.\"\n        },\n        {\n            \"keyword\": \"Data Federation\",\n            \"description\": \"An approach integrating multiple databases into a virtual database.\"\n        },\n        {\n            \"keyword\": \"Dart Native\",\n            \"description\": \"Dart code compiled to native machine code for mobile/desktop apps.\"\n        },\n        {\n            \"keyword\": \"Discrete Mathematics\",\n            \"description\": \"Mathematical structures fundamentally discrete rather than continuous (essential for CS).\"\n        },\n        {\n            \"keyword\": \"Data Replication\",\n            \"description\": \"The process of storing data in multiple locations to improve availability and fault tolerance.\"\n        },\n        {\n            \"keyword\": \"Dependency Management\",\n            \"description\": \"Tools and processes for handling external libraries/packages a project relies on.\"\n        },\n        {\n            \"keyword\": \"Dart Web\",\n            \"description\": \"Dart code compiled to JavaScript for web applications.\"\n        },\n        {\n            \"keyword\": \"Data Masking\",\n            \"description\": \"A technique creating structurally similar but inauthentic data for privacy protection.\"\n        },\n        {\n            \"keyword\": \"Deterministic Finite Automaton (DFA)\",\n            \"description\": \"A finite state machine accepting/rejecting strings of symbols by running through a state sequence.\"\n        },\n        {\n            \"keyword\": \"Data Wrangling\",\n            \"description\": \"The process of cleaning, structuring, and enriching raw data into a desired format.\"\n        },\n        {\n            \"keyword\": \"Docker Hub\",\n            \"description\": \"A cloud-based registry service for sharing Docker container images.\"\n        },\n        {\n            \"keyword\": \"Data Parallelism\",\n            \"description\": \"A form of parallel computing where the same operation is performed on multiple data simultaneously.\"\n        },\n        {\n            \"keyword\": \"Dual Boot\",\n            \"description\": \"A configuration where a computer has two operating systems and can boot into either.\"\n        },\n        {\n            \"keyword\": \"Data Visualization\",\n            \"description\": \"The graphical representation of information and data (e.g., charts, graphs).\"\n        },\n        {\n            \"keyword\": \"Dart Isolate\",\n            \"description\": \"A lightweight thread in Dart's concurrency model with its own memory heap.\"\n        },\n        {\n            \"keyword\": \"Data Normalization\",\n            \"description\": \"The process of structuring a database to reduce redundancy and improve integrity.\"\n        },\n        {\n            \"keyword\": \"Dynamic Link Library (DLL)\",\n            \"description\": \"Microsoft's implementation of shared libraries in Windows.\"\n        },\n        {\n            \"keyword\": \"Data Sovereignty\",\n            \"description\": \"The concept that digital data is subject to laws of the country where it's located.\"\n        },\n        {\n            \"keyword\": \"Dart FFI (Foreign Function Interface)\",\n            \"description\": \"A mechanism for Dart code to call native C code.\"\n        },\n        {\n            \"keyword\": \"Data Mesh\",\n            \"description\": \"A decentralized architecture for data management and organizational scaling.\"\n        },\n        {\n            \"keyword\": \"Domain Name\",\n            \"description\": \"A human-readable web address (e.g., google.com) mapped to an IP address via DNS.\"\n        },\n        {\n            \"keyword\": \"Dart Analyzer\",\n            \"description\": \"A static analysis tool for Dart code that identifies errors and warnings.\"\n        },\n        {\n            \"keyword\": \"Data Annotation\",\n            \"description\": \"The process of labeling data to make it usable for machine learning.\"\n        },\n        {\n            \"keyword\": \"Dynamic Host Configuration Protocol (DHCP)\",\n            \"description\": \"A network protocol automatically assigning IP addresses to devices.\"\n        },\n        {\n            \"keyword\": \"Data Stream\",\n            \"description\": \"A continuous flow of data records processed incrementally.\"\n        },\n        {\n            \"keyword\": \"Dart Pub\",\n            \"description\": \"Dart's package manager for sharing and using libraries.\"\n        },\n        {\n            \"keyword\": \"Data Quality\",\n            \"description\": \"The measure of data's fitness to serve its purpose in a given context.\"\n        },\n        {\n            \"keyword\": \"Digital Twin\",\n            \"description\": \"A virtual representation serving as the real-time digital counterpart of a physical object.\"\n        },\n        {\n            \"keyword\": \"Dart Test\",\n            \"description\": \"Dart's built-in testing framework.\"\n        },\n        {\n            \"keyword\": \"Data Fabric\",\n            \"description\": \"An architecture and set of services providing consistent capabilities across hybrid multi-cloud environments.\"\n        },\n        {\n            \"keyword\": \"Demultiplexer (Demux)\",\n            \"description\": \"A circuit taking a single input and selecting one of many outputs.\"\n        },\n        {\n            \"keyword\": \"Dart Formatter\",\n            \"description\": \"A tool that automatically formats Dart code according to style guidelines.\"\n        },\n        {\n            \"keyword\": \"Data Deduplication\",\n            \"description\": \"A technique eliminating duplicate copies of repeating data to improve storage efficiency.\"\n        },\n        {\n            \"keyword\": \"Docker Volume\",\n            \"description\": \"A mechanism for persisting data generated by Docker containers.\"\n        },\n        {\n            \"keyword\": \"Dart Doc\",\n            \"description\": \"Dart's documentation generator that creates API reference docs from code comments.\"\n        },\n        {\n            \"keyword\": \"Data Virtualization\",\n            \"description\": \"An approach allowing applications to retrieve and manipulate data without technical details.\"\n        },\n        {\n            \"keyword\": \"Dart Build System\",\n            \"description\": \"A system for transforming and generating Dart code during development.\"\n        },\n        {\n            \"keyword\": \"Data Lineage\",\n            \"description\": \"The lifecycle of data including origins, movements, characteristics, and transformations.\"\n        },\n        {\n            \"keyword\": \"Dart Native Extensions\",\n            \"description\": \"A mechanism for extending Dart's capabilities with platform-specific code.\"\n        },\n        {\n            \"keyword\": \"DataOps\",\n            \"description\": \"A collaborative data management practice improving communication between data teams.\"\n        },\n        {\n            \"keyword\": \"Dart Observatory\",\n            \"description\": \"A profiling and debugging tool for Dart applications.\"\n        },\n        {\n            \"keyword\": \"Data Profiling\",\n            \"description\": \"The process of examining data for completeness, accuracy, and consistency.\"\n        },\n        {\n            \"keyword\": \"Dart Code Metrics\",\n            \"description\": \"Tools for analyzing Dart code quality and maintainability.\"\n        },\n        {\n            \"keyword\": \"Data Retention\",\n            \"description\": \"Policies determining how long data should be stored before deletion.\"\n        },\n        {\n            \"keyword\": \"Dart DevTools\",\n            \"description\": \"A suite of performance tools for Dart and Flutter development.\"\n        },\n        {\n            \"keyword\": \"Data Synchronization\",\n            \"description\": \"The process of establishing consistency among data across different systems.\"\n        },\n        {\n            \"keyword\": \"Dart Fix\",\n            \"description\": \"A tool for automatically applying fixes to Dart code based on analyzer suggestions.\"\n        },\n        {\n            \"keyword\": \"Data Transformation\",\n            \"description\": \"The process of converting data from one format/structure to another.\"\n        },\n        {\n            \"keyword\": \"Dart Linter\",\n            \"description\": \"A static analysis tool enforcing coding standards in Dart projects.\"\n        },\n        {\n            \"keyword\": \"Data Validation\",\n            \"description\": \"The process of ensuring data is clean, correct, and useful.\"\n        },\n        {\n            \"keyword\": \"Dart Native Assets\",\n            \"description\": \"A mechanism for bundling platform-specific resources with Dart applications.\"\n        },\n        {\n            \"keyword\": \"Data Versioning\",\n            \"description\": \"The practice of tracking and managing changes to datasets over time.\"\n        },\n        {\n            \"keyword\": \"Dart Platform Interface\",\n            \"description\": \"A design pattern for writing platform-agnostic Dart code with platform-specific implementations.\"\n        },\n        {\n            \"keyword\": \"Data Vault\",\n            \"description\": \"A data modeling approach for historical data tracking in data warehouses.\"\n        },\n        {\n            \"keyword\": \"Dart Plugin\",\n            \"description\": \"An extension adding functionality to the Dart development environment.\"\n        },\n        {\n            \"keyword\": \"Data Ingestion\",\n            \"description\": \"The process of importing data from various sources into a system for storage/analysis.\"\n        },\n        {\n            \"keyword\": \"Dart SDK\",\n            \"description\": \"The Software Development Kit containing tools for Dart development.\"\n        },\n        {\n            \"keyword\": \"Data Partitioning\",\n            \"description\": \"The practice of dividing data into subsets for improved performance and manageability.\"\n        },\n        {\n            \"keyword\": \"Dart Standalone\",\n            \"description\": \"Dart programs that run independently outside of browsers.\"\n        },\n        {\n            \"keyword\": \"Data Persistence\",\n            \"description\": \"The characteristic of data that outlives the execution of the program that created it.\"\n        },\n        {\n            \"keyword\": \"Dart WebAssembly (Wasm)\",\n            \"description\": \"Compiling Dart to WebAssembly for web deployment.\"\n        },\n        {\n            \"keyword\": \"Data Migration\",\n            \"description\": \"The process of transferring data between storage types, formats, or systems.\"\n        },\n        {\n            \"keyword\": \"Dart Web Components\",\n            \"description\": \"A way to create reusable custom elements in web applications using Dart.\"\n        },\n        {\n            \"keyword\": \"Data Compression\",\n            \"description\": \"The process of encoding information using fewer bits to reduce storage/transmission requirements.\"\n        },\n        {\n            \"keyword\": \"Dart Web Server\",\n            \"description\": \"A server-side application written in Dart for handling HTTP requests.\"\n        },\n        {\n            \"keyword\": \"Data Consistency\",\n            \"description\": \"The property ensuring all data copies in a distributed system are identical at all times.\"\n        },\n        {\n            \"keyword\": \"Dart Web Starter\",\n            \"description\": \"Templates and tools for bootstrapping Dart web applications.\"\n        },\n        {\n            \"keyword\": \"Data Classification\",\n            \"description\": \"The process of organizing data into categories for efficient use and protection.\"\n        },\n        {\n            \"keyword\": \"Dart Web Toolkit\",\n            \"description\": \"Libraries and tools for building web applications with Dart.\"\n        },\n        {\n            \"keyword\": \"Data Archiving\",\n            \"description\": \"The process of moving data that is no longer actively used to separate storage for long-term retention.\"\n        },\n        {\n            \"keyword\": \"Dart Web UI\",\n            \"description\": \"A declarative framework for building web user interfaces in Dart.\"\n        },\n        {\n            \"keyword\": \"Data Aggregation\",\n            \"description\": \"The compilation of information from databases with intent to prepare combined datasets for analysis.\"\n        },\n        {\n            \"keyword\": \"Dart Web Workers\",\n            \"description\": \"A mechanism for running Dart scripts in background threads for web applications.\"\n        },\n        {\n            \"keyword\": \"Data Analytics\",\n            \"description\": \"The science of analyzing raw data to make conclusions about information.\"\n        },\n        {\n            \"keyword\": \"Dart WebSockets\",\n            \"description\": \"A protocol providing full-duplex communication channels over a single TCP connection in Dart web apps.\"\n        },\n        {\n            \"keyword\": \"Data Binding\",\n            \"description\": \"A general technique that binds data sources from the provider and consumer together.\"\n        },\n        {\n            \"keyword\": \"Dart Web Framework\",\n            \"description\": \"A software framework designed to support development of web applications using Dart.\"\n        },\n        {\n            \"keyword\": \"Data Catalog\",\n            \"description\": \"An organized inventory of data assets in an organization.\"\n        },\n        {\n            \"keyword\": \"Dart Web Components\",\n            \"description\": \"A way to create reusable custom elements in web applications using Dart.\"\n        },\n        {\n            \"keyword\": \"Data Flow\",\n            \"description\": \"The movement of data through a system comprising software, hardware, or a combination.\"\n        },\n        {\n            \"keyword\": \"Dart Web Development\",\n            \"description\": \"The process of building web applications using the Dart programming language.\"\n        },\n        {\n            \"keyword\": \"Data Hierarchy\",\n            \"description\": \"The systematic organization of data, often in a tree-like structure.\"\n        },\n        {\n            \"keyword\": \"Dart Web Application\",\n            \"description\": \"An application program that is stored on a remote server and delivered over the Internet through a browser interface, written in Dart.\"\n        }\n    ];\n    const [searchTerm, setSearchTerm] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const [selectedLetter, setSelectedLetter] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(\"\");\n    const alphabet = [\n        ...\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    ];\n    const filteredTerms = termsData.filter((term)=>{\n        const matchesLetter = selectedLetter ? term.keyword.startsWith(selectedLetter) : true;\n        const matchesSearch = term.keyword.toLowerCase().includes(searchTerm.toLowerCase());\n        return matchesLetter && matchesSearch;\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_1___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"Computer Dictionary | Unstop Computer\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1587,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"description\",\n                        content: \"Explore a comprehensive computer dictionary with definitions of key computing and tech terms. Enhance your knowledge with Unstop Computer.\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1588,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"viewport\",\n                        content: \"width=device-width, initial-scale=1\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1592,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"theme-color\",\n                        content: \"#000000\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1593,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        charSet: \"UTF-8\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1594,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"robots\",\n                        content: \"index, follow\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1595,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"keywords\",\n                        content: \"Computer Dictionary, Glossary, Programming, Web Development, Data Science, Cybersecurity, Software, Hardware, Unstop Computer\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1596,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"canonical\",\n                        href: \"https://unstopcomputer.tech/glossary\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1600,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        property: \"og:image\",\n                        content: \"https://unstopcomputer.tech/Images/logo.png\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1604,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        property: \"og:title\",\n                        content: \"Computer Dictionary | Unstop Computer\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1608,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                lineNumber: 1586,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"container text-center mx-auto px-4 py-16\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        className: \"text-4xl md:text-5xl font-bold text-blue-700 mb-4\",\n                        children: \"Computer Dictionary\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1615,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-lg text-gray-700\",\n                        children: \"Search and explore key computer science terms including programming, hardware, networking, databases, AI, and more.\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1618,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                lineNumber: 1614,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"max-w-screen-lg mx-auto px-4 pb-16\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"flex flex-wrap justify-center gap-2 mb-6\",\n                        children: alphabet.map((letter)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: ()=>setSelectedLetter(letter === selectedLetter ? \"\" : letter),\n                                className: \"px-3 py-1 rounded-md border \".concat(selectedLetter === letter ? \"bg-blue-600 text-white\" : \"bg-gray-100 text-gray-800 hover:bg-blue-100\"),\n                                children: letter\n                            }, letter, false, {\n                                fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                                lineNumber: 1628,\n                                columnNumber: 13\n                            }, undefined))\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1626,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        type: \"text\",\n                        placeholder: \"Search term...\",\n                        value: searchTerm,\n                        onChange: (e)=>setSearchTerm(e.target.value),\n                        className: \"w-full px-4 py-3 mb-6 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-300\"\n                    }, void 0, false, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1645,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mb-4 text-right text-sm text-gray-600\",\n                        children: [\n                            \"Showing \",\n                            filteredTerms.length,\n                            \" \",\n                            filteredTerms.length === 1 ? \"term\" : \"terms\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1652,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"table\", {\n                        className: \"w-full table-auto border border-collapse\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"thead\", {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                    className: \"bg-blue-100\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                            className: \"text-left px-4 py-2 border\",\n                                            children: \"Keyword\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                                            lineNumber: 1660,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                            className: \"text-left px-4 py-2 border\",\n                                            children: \"Description\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                                            lineNumber: 1661,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                                    lineNumber: 1659,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                                lineNumber: 1658,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tbody\", {\n                                children: filteredTerms.length > 0 ? filteredTerms.map((term, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                        className: \"border-t hover:bg-gray-100\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                className: \"px-4 py-2 border font-medium\",\n                                                children: term.keyword\n                                            }, void 0, false, {\n                                                fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                                                lineNumber: 1668,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                                className: \"px-4 py-2 border\",\n                                                children: term.description\n                                            }, void 0, false, {\n                                                fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                                                lineNumber: 1671,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, index, true, {\n                                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                                        lineNumber: 1667,\n                                        columnNumber: 17\n                                    }, undefined)) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                        colSpan: \"2\",\n                                        className: \"text-center py-4\",\n                                        children: \"No results found.\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                                        lineNumber: 1676,\n                                        columnNumber: 17\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                                    lineNumber: 1675,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                                lineNumber: 1664,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                        lineNumber: 1657,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/mac/Downloads/ucp/pages/glossary/index.js\",\n                lineNumber: 1624,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true);\n};\n_s(GlossaryTable, \"+inoqvVXW1StD+7wquGAEGmOUCk=\");\n_c = GlossaryTable;\n/* harmony default export */ __webpack_exports__[\"default\"] = (GlossaryTable);\nvar _c;\n$RefreshReg$(_c, \"GlossaryTable\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/glossary/index.js\n"));

/***/ }),

/***/ "./node_modules/next/head.js":
/*!***********************************!*\
  !*** ./node_modules/next/head.js ***!
  \***********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ./dist/shared/lib/head */ \"./node_modules/next/dist/shared/lib/head.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkLmpzIiwibWFwcGluZ3MiOiJBQUFBLGlIQUFrRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkLmpzPzg4NDkiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3Qvc2hhcmVkL2xpYi9oZWFkJylcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/head.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=%2FUsers%2Fmac%2FDownloads%2Fucp%2Fpages%2Fglossary%2Findex.js&page=%2Fglossary!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);